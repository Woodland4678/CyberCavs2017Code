// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4678.CyberCavs2017Code.subsystems;

import org.usfirst.frc4678.CyberCavs2017Code.RobotMap;
import org.usfirst.frc4678.CyberCavs2017Code.commands.*;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Claw extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon clawPosition = RobotMap.clawclawPosition;
    private final Solenoid clamp = RobotMap.clawclamp;
    private final AnalogInput leftFingerPosition = RobotMap.clawleftFingerPosition;
    private final AnalogInput rightFingerPosition = RobotMap.clawrightFingerPosition;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void setClawPosition(double position){
    	clawPosition.changeControlMode(TalonControlMode.Position);
    	clawPosition.setPID(0.001, 0, 0);
    	clawPosition.set(position);
    }
    public void clampGear(){
    	clamp.set(true);
    }
    public void releaseGear(){
    	clamp.set(false);
    }
    public double getLeftFingerPosition(){
    	return leftFingerPosition.getValue();
    }
    public double getRightFingerPosition(){
    	return rightFingerPosition.getValue();
    }
    public void grabGear(){
    	//grab method here
    }
}

