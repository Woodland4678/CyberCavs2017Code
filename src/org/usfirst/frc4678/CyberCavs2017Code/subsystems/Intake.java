// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4678.CyberCavs2017Code.subsystems;

import org.usfirst.frc4678.CyberCavs2017Code.Robot;
import org.usfirst.frc4678.CyberCavs2017Code.RobotMap;
import org.usfirst.frc4678.CyberCavs2017Code.commands.*;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Servo lowGoalFlap = RobotMap.intakelowGoalFlap;
    private final SpeedController intakeMotor = RobotMap.intakeintakeMotor;
    private final CANTalon intakePosition = RobotMap.intakeintakePosition;
    private final Servo leftFuelWindmillDeployMotor = RobotMap.intakeleftFuelWindmillDeployMotor;
    private final Servo rightFuelWindmillDeployMotor = RobotMap.intakerightFuelWindmillDeployMotor;
    private final SpeedController leftFuelWindmillSpinMotor = RobotMap.intakeleftFuelWindmillSpinMotor;
    private final SpeedController rightFuelWindmillSpinMotor = RobotMap.intakerightFuelWindmillSpinMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void setIntakeMotor(double power){
    	intakeMotor.set(power);
    }
    public void setIntakePosition(double position){
    	intakePosition.changeControlMode(TalonControlMode.Position);
    	intakePosition.setPID(0.001, 0, 0);
    	intakePosition.set(position);
    }
    public void openLowGoalFlap (){
    	lowGoalFlap.set(Robot.lowGoalFlapOpenPosition());
    }
    public void closeLowGoalFlap (){
    	lowGoalFlap.set(Robot.lowGoalFlapClosePosition());
    }
    public void deployFuelWindmills (){
    	leftFuelWindmillDeployMotor.set(Robot.windmillDeployAngle());
    	rightFuelWindmillDeployMotor.set(Robot.windmillDeployAngle());
    }
    public void retractFuelWindmills (){
    	leftFuelWindmillDeployMotor.set(Robot.windmillRetractAngle());
    	rightFuelWindmillDeployMotor.set(Robot.windmillRetractAngle());
    }
    public void spinWindmillMotors (double speed){
    	leftFuelWindmillSpinMotor.set(speed);
    	rightFuelWindmillSpinMotor.set(speed);

    }
}

